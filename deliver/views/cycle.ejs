<!DOCTYPE html>

<html>
<head>
    <% include partials/head.ejs %>
    <script src="/resources/js/jquery-fieldselection.js" type="text/javascript"></script>
</head>
<body>
<% include partials/body_top.ejs %>
<div id="wrap">
        <div id="header">
            <% include partials/menu.ejs %>
            <% include partials/user_box.ejs %>
            <% include partials/failures.ejs %>
            <% include partials/tag_search.ejs %>
        </div>


        <div id="content" class="cf">
            <div class="right-add-offer">
                <div id="cycle" class="add-offer add-offer-small">
                    <h2><span class="arrow"> <%= cycle.subject_name %></span> <%= cycle.title %></h2>
                    <div class="text-box cf">
                    <div class="cycle-content">
                    <% if (cycle.image_field) { %>

                      <div class="img-box floatRight" style="overflow: hidden;">
                                <div style="width:260px; height:190px;" class='auto-scale'>
                                      <img src="<%=cycle.image_field && cycle.image_field.url %>" title="<%= cycle.title %>"/>

                                </div>
                                <span></span>
                            </div>
                    <% } %>
                        <h3><%- cycle.discussion_title %></h3>
                        <p> <%- cycle.text_field %>   </p>
                        </div>
                        <p id="read_more"> <a href="javascript:void(0);"> קרא עוד </a> </p> </div>
                    <div class="add-offer-bottom cf">
                        <div class="right">
                            <div class="tags">
                            <!--
                                <div class="info">
                                    <span class="talks">33</span>
                                    <span class="watched">151</span>
                                </div>
                                -->
                                <% if (cycle.tags) for (var c = 0; c<cycle.tags.length; c++) { %>
                                      <a href="?tag_name=<%=cycle.tags[c]%>"> <%=cycle.tags[c] %></a>
                                <% }%>
                            </div>
                        </div>
                         <a class="fraction-btn share" data-title="<%= cycle.title %>" data-text_preview="<%= cycle.text_field_preview%>" data-img_src="<%= cycle.image_field && cycle.image_field.url %>" rel="/cycles/<%= cycle.id %>" href="/facebookShare?link=/cycles/<%= cycle.id %>" target="_blank">שתף</a>

                    </div>
                </div>
                <div class="popular-comments cf">
                    <div class="top">
                        <a href=""><span></span>  תגובות פופולריות</a>
                    </div>
                    <div id="comments" class="hide-box">

                    </div>
                </div>
            </div>
            <div class="card-left">
                <h3><span>עגלת המידע</span></h3>
                <div class="comment-slide">
                    <a href="" id="prev" ></a>
                    <a href="" id="next" ></a>
                    <div class="slide-c"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="blue-bar">
        <div class="extra">
            <a class="green-btn" href="javascript:void(0)"><%= cycle.is_user_follower_of_cycle ? "הפסק לעקוב" : "עקוב אחרי מעגל התנופה"%> </a>
            <p id="followers_count" >מספר העוקבים אחרי מעגל תנופה זה: <strong><%= cycle.followers_count %></strong></p>
        </div>
    </div>
    <div class="followers-box">
        <div class="extra">
            <h2><span>טיימליין</span> 2012</h2>
            <div class="followers-diagram">

            </div>
            <div class="btn-box">
                <a href="/actions/create/<%= cycle.id %>" >+ הצע פעולה חדשה</a>
            </div>
        </div>
    </div>
    <div  class="comments-box">
        <div class="extra cf">
            <div class="updates-box cf">
                <div class="right">
                    <h2>עדכונים</h2>
                    <div class="updates">
                    </div>
                </div>
                <div class="left">
                    <h2>פעולות הממתינות לאישור</h2>
                    <div class="anticipation-box">
                        <a href="../actions/cycle/<%=cycle._id%>" class="btn">הראה לי את כולן</a>
                    </div>
                </div>
            </div>
            <div class="blog-box cf">
                <h2>מובילי דעת קהל</h2>


                     <% if (cycle.opinion_shapers) for (var c = 0; c<cycle.opinion_shapers.length && c<3 ; c++) { %>
                             <div class="one <% if (c==2) {%>last<% }%> ">

                             <div class="img-box" style="overflow: hidden;">
                                 <a href="/myuru/<%=cycle.opinion_shapers[c].user_id._id%>">
                                     <div style="width:112px;height:120px; overflow:hidden; " class='auto-scale' >
                                         <img  src="<%=cycle.opinion_shapers[c].user_id.avatar_url %>" alt=""/>
                                         <span class="fillter"></span>
                                     </div>
                                     <span></span>
                                </a>
                             </div>
                                <h4><a href="/myuru/<%=cycle.opinion_shapers[c].user_id._id%>"><%=cycle.opinion_shapers[c].user_id.first_name %> <%=cycle.opinion_shapers[c].user_id.last_name %></a></h4>
                                <p><% if (cycle.opinion_shapers[c].text) {%>  <%=cycle.opinion_shapers[c].text %>  <% } %></p>
                                 <div class="badges">
                                     <div class="proxy">
                                         <span><%=cycle.opinion_shapers[c].user_id.num_of_proxies_i_represent %></span>
                                     </div>
                                     <div class="respect">
                                         <span><%=cycle.opinion_shapers[c].user_id.score %></span>
                                     </div>
                                 </div>
                             </div>
                     <% }%>




            </div>
            <div class="followers-ppl cf" id="followers">
                <h2>עוקבים</h2>



            </div>
        </div>
    </div>


<% include partials/footer.ejs %>

<script type="text/javascript">
    $(document).ready(function () {

        jQuery.easing.def = "easeOutCirc";
             var my_id = "<%=user_logged ? user._id : ''%>";
            var cycle_id = "<%=cycle.id%>";
            var user = "<%=cycle.id%>";


        <%
        if (user_logged&&proxy) { %>
            var proxy = JSON.parse('<%-proxy%>');
        <%
        } else { %>
            var proxy = [];
        <%
        }
        %>


        $('#comments').on('click', '#add_or_remove_proxy', function (e) {
            var userData = $(this).parents('.comment-one');
            var proxyId = userData.data('creator_id');
            var userName = userData.data('creator_name');
            e.preventDefault();
            proxyCommon.addOrRemoveProxy(proxy,proxyId,userName,my_id,function(newProxy){
                proxy=newProxy.proxy;

            })


        });

            $(".inline").colorbox({ inline: true, width: "730" });

            $('.popular-comments .user-right').hover(function () {
                $(this).toggleClass('hover');
            });
            $('.comments-box .comment-one .user-right').hover(function () {
                $(this).toggleClass('hover');
            });

            $('.hide-box').hide();
            $('.popular-comments .top a').click(function () {
                $(this).parents('.popular-comments').find('.hide-box').slideToggle();
                $(this).parents('.popular-comments').toggleClass('hover');
                return false;
            });

            $('.green-btn').click(function(){
                var button = $(this);
                button.text('...');

                db_functions.joinToCycleFollowers(cycle_id, function(err, result){
                    button.text(result.is_follower ? "הפסק לעקוב" : "עקוב אחרי מעגל התנופה");
                    $('#followers_count strong').text(result.followers_count);
                })
            });
            db_functions.getCycleShoppingCart(cycle_id, function ( err,data) {

                    $.each(data.objects, function (index, item) {
                        dust.render('discussion_information_item', item, function (err, out) {
                            $('.slide-c').append(out);
                        });
                    });

                    $('.slide-c')
                       .after('<div id="nav2">')
                       .cycle({
                           fx: 'turnDown',
                           speed: 'fast',
                           timeout: 0,
                           pager: '#nav2',
                           next: '#next',
                           prev: '#prev'
                       });
                    if (data.objects.length < 2) {
                        $("#prev").hide();
                        $("#next").hide();
                    }

            });

            db_functions.getCycleUpdates(cycle_id, function (err, data) {

                        $.each(data.objects, function (index, item) {
                            item.text_field = item.text_field.trim().substring(0, 300).split(" ").slice(0, -1).join(" ") + "... ";
                        });
                        dust.renderArray('cycle_update', data.objects, function (err, out) {
                            $('.updates').append(out);

                        });
           });


            db_functions.getCycleTimeline(cycle_id, function (err, data) {
                    var type_names={
                         past:'',
                         cycle_creation :'יצירת מעגל תנופה',
                         due_date :'תאריך יעד',
                         discussion:'יצירת דיון',
                         action  :'פעולה',
                         cycle_update  :'עדכון',
                         today  :'היום',
                         admin_update :'עדכון מערכת'
                             },


                        i=0,
                        j= 0,
                        pre_discussion_items = {type:'past',month:'לפני יצירת הדיון',items:[]},
                        past_months={},
                        clusters={},
                        past=true;

                    //init items
                    var last_item=null;
                    $.each(data.objects, function (index, item) {


                        item.type_print =  type_names[item.type];
                        switch(item.type)
                        {

                            case 'due_date':

                                break;
                            case 'cycle_creation':

                                break;
                            case 'discussion':

                                break;
                            case 'action':
                                item.short=item.title
                                item.link ='/actions/'+item._id;
                                break;
                            case 'cycle_update':
                                item.short=item.title
                                item.link ='/updates/'+item._id;
                                break;
                            case 'today':
                                past=false;
                                break;
                            case 'admin_update':
                                item.short=item.text
                                break;
                            default:
                                console.log("unknow timleline type : "+  item.type);
                        }

                        if(!past && last_item && last_item.date.substr(0,10)==item.date.substr(0,10))
                        {
                            last_item.cluster=true;
                            item.cluster=true;
                        }
                        last_item=item;

                    });

                      nodes= data.objects.slice(0);
                      //remove all past items from list and move them into past objects
                      //
                      past=true;
                      var pre_discussion=true,
                          custers_count = 0,
                          clustered_count=0;
                      $.each(data.objects, function (index, item) {


                            if(item.type=='today')  {
                                past=false;
                              //return false;
                            }
                            if(item.type=='discussion')  {
                                pre_discussion=false;
                                return true;
                            }
                            if (pre_discussion)
                            {

                                pre_discussion_items.items.push(item) ;
                                nodes.shift();
                            }
                            else if (past)
                            {
                                var item_date=   new Date(item.date)
                                var ind=item_date.format('mmyy');
                                if(!past_months[ind]) {
                                    past_months[ind]=  {type:'past',month:item_date.format('mmmm'),items:[]}
                                }
                                past_months[ind].items.push(item);
                                nodes.splice(1,1);
                            }
                            else     //present and future items
                            {
                                 if(item.cluster)
                                 {
                                     var item_date=   new Date(item.date)
                                     var ind=item_date.format('d.m');
                                     if(!clusters[ind]) {
                                        // clusters[ind]=  {type:'cluster',date:item_date,items:[]}
                                         clusters[ind]=0;
                                         custers_count++;
                                     }
                                    // clusters[ind].items.push(item);
                                     //nodes.splice(1,1);
                                     clustered_count++;;

                                     clusters[ind]++;


                                 }
                            }

                      } );
                     i=1;
                     $.each(past_months, function (index, item) {
                        nodes.splice(i,0,item);
                         i++;
                     });
                     if (pre_discussion_items.items.length>0)
                     {
                         nodes.splice(1,0,pre_discussion_items);
                     }

                     var count =   nodes.length-1 -clustered_count + custers_count ;
                     var render_clusters={};
                     i=0;
                     $.each(nodes, function (index, item) {

                          if(item.cluster)
                          {
                              var item_date=   new Date(item.date)
                              var ind=item_date.format('d.m');
                              if(!render_clusters[ind])  {
                                  render_clusters[ind]={};
                                  render_clusters[ind].items=[];
                              }
                              else
                              {
                                  render_clusters[ind].offset=   (j*980)/count;
                              }
                              render_clusters[ind].items.push(i);
                              clusters[ind]--;
                          }
                          item.offset  =    (j*980)/count;
                          item.timeline_index=i;
                          switch(item.type)
                          {
                              case 'past':
                                    dust.render('cycle_timeline_past_cluster', item, timelineAppend);
                                    break;
                              case 'due_date':
                                    dust.render('cycle_timeline_due_date', item, timelineAppend);
                                    break;
                              case 'cycle_creation':
                                    dust.render('cycle_timeline_creation', item, timelineAppend);
                                    break;
                              case 'discussion':
                                    dust.render('cycle_timeline_discussion', item, timelineAppend);
                                    break;
                              case 'action':
                                    dust.render('cycle_timeline_action', item, timelineAppend);
                                    break;
                              case 'cycle_update':
                                    dust.render('cycle_timeline_update', item, timelineAppend);
                                    break;
                              case 'today':
                                    dust.render('cycle_timeline_today', item, timelineAppend);
                                    break;
                              case 'admin_update':
                                    dust.render('cycle_timeline_admin_update', item, timelineAppend);
                                    break;
                              default:
                               console.log("unknow timleline type : "+  item.type);
                          }
                          i++;
                          j++;
                          if(item.cluster && clusters[ind]!=0 )
                          {
                            j--;
                          }
                     });

                    $.each(render_clusters, function (index1, cluster_array) {
                        var it= [];
                        var dummy=true;
                        var offset=cluster_array.offset;
                        $.each(cluster_array.items, function (index2, item) {
                             if($("#timeline_item_"+item).attr("class").indexOf("today") == -1 )
                             {
                                 it.push($('#timeline_item_'+item))
                             }
                             else
                             {
                                 dummy=false;
                             }
                        });
                        if (dummy)   {
                            dust.render('cycle_timeline_dummy', {date:index1,offset:offset}, timelineAppend);
                        }
                        animateCluster(it);
                    });
             });

             function timelineAppend  (err, out) {
                 $('.followers-diagram').append(out);
             };

            db_functions.getPendingActionsByCycle(cycle_id, 4, function ( data,err) {

                dust.renderArray('cycle_pending_action', data.objects, function (err, out) {
                    $('.anticipation-box').prepend(out);

                });
           });

           	var killScroll = false;
           	var followersPage=0;
           	getFollowers();

            function   getFollowers()
            {

                 db_functions.getCylceFollowers(cycle_id, followersPage,function ( data) {
                    followersPage++;
                   if(data.meta.total_count<14) {
                         killScroll = true;
                     }
                    dust.renderArray('cycle_follower', data.objects, function (err, out) {
                        $('#followers').append(out);

                    });
                });
            }
            	// Detect that we are at bottom of page, and call autoloading function
            $(window).scroll(function(){
                if  ($(window).scrollTop()+100 >= ($(document).height() - ($(window).height()))){
                    if (killScroll == false) { // - Keeps the loader from fetching more than once.
                        //killScroll = true; // - Set killScroll to true, to make sure we do not trigger this code again before it's done running.
                         getFollowers();
                    }
                }
            });

            $('#read_more').click(function () {
                $(".cycle-content").height("auto");
                 $(this).hide();
            });

            $('.hide-box').on('mouseenter', ".side_menu",
                        function (e) {
                            $(this).addClass('hover');
                            $('.left', this).show().css({width:0}).animate({'width':87});

                        }).on('mouseleave', ".side_menu", function (e) {
                            var side = $(this);
                            side.removeClass('hover');
                            $('.left', this).animate({'width':0}, function () {
                                $(this).hide();
                            });
             });

             db_functions.getCyclePosts(cycle_id, function (err,data) {

                   for (i = 0; i < data.objects.length; i++) {
                       data.objects[i].isFirst = (i === 0);
                       data.objects[i].isEven = ((i % 2)== 0);
                       data.objects[i].voting =      data.objects[i].votes_for - data.objects[i].votes_against;
                       if(i == data.objects.length-1 || data.objects[i].discussion_id != data.objects[i+1].discussion_id )
                       {
                           data.objects[i].discussion_button=true;
                       }


                   }
                  dust.renderArray('cycle_post', data.objects, function (err, out) {
                      $('.hide-box').append(out);
                  });
              });

              $('.hide-box').on('click', '.vote_for', function () {
                     vote.apply($(this),['add']);

             });

             $('.hide-box').on('click', ".vote_against", function () {
                 vote.apply($(this),['remove']);

             });


        function vote(actionType){
            var post_id = $(this).parents('.one').data("id");
            var button = $(this);

            db_functions.voteForPost(post_id, actionType, function (err, post_obj) {
                if (!err) {

                       button.parents(".ratio").find(".count").text(Math.round(post_obj.votes_for-post_obj.votes_against ));
                       var down_arrow = button.parents(".ratio").find(".down");
                       var up_arrow =button.parents(".ratio").find(".up");
                       down_arrow.removeClass("balance0").removeClass("balance1").removeClass("balance2").removeClass("balance3").removeClass("balance-1").removeClass("balance-2").removeClass("balance-3").addClass("balance"+post_obj.voter_balance);
                       up_arrow.removeClass("balance0").removeClass("balance1").removeClass("balance2").removeClass("balance3").removeClass("balance-1").removeClass("balance-2").removeClass("balance-3").addClass("balance"+post_obj.voter_balance);
                }
                else {
                    if (err.responseText == 'Error: there is not enought tokens')
                        popupProvider.showOkPopup( {message:     'אין לך מספיק אסימונים'});
                    if (err.responseText == 'user already voted for this post')
                        popupProvider.showOkPopup( {message:     'באפשרותך לתת עד שלושה אסימונים לתגובה בדיון'});
                    if (err.responseText == 'soory, can\'t vote to your own post')
                        popupProvider.showOkPopup( {message:     'מצטערים, לא ניתן להצביע לתגובה של עצמך'});
                }
            })
        }

        $('.followers-diagram .event .icon').live("hover", function(){
         //  console.log('elip');
            $(this).find('.popup-text').ellipsis();
        });
        $('.followers-diagram .event .green-icon .popup-event').live('click',function(){
            window.location.href = '/updates/'+$(this).attr('item-id');
        });

        $('.followers-diagram .event .blue-icon .popup-event').live('click',function(){
            window.location.href = '/actions/'+$(this).attr('item-id');
        });


        $('.join-btn').live("click",function(e){
            e.preventDefault();
            var action_id = $(this).attr('item-id');
            db_functions.joinOrLeaveAction(action_id,function(err,data){
                if(err){
                    console.log(err) ;
                }
                else{
                    setJoinBT(data);

                }
            })
        });
        //
        //.popup-event
        //$('.popup-text').live("hover", function(){
         //   alert("Goodbye!"); });
        // $('.popup-text').ellipsis();
        //.popup-event

});
</script>
</body>
</html>
