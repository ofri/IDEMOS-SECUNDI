<%
    /* Usage:

        Have a variable called image_upload = {
            default_image: '/images/...',
            current_value: '/images/...',
            api_endpoint: '/api/...',
            title: 'some text',
            disabled: false
        }

        Use CSS for styling:
            .img-box
            .img-box .image-container
            .img-box .image-container img
            .img-box #upload_image_placeholder
    */
%>

<div class="img-box" style="overflow:hidden; position:relative;">
    <div class="image-container auto-scale">
        <img src="<%= image_upload.current_value || image_upload.default_image || '' %>" alt="<%= image_upload.title || '' %>" title="<%= image_upload.title || '' %>"/>
    </div>
    <span id="upload_image_placeholder"></span>
</div>

<% if (!image_upload.disabled) { %>
<script>
    (function () {
        var image_box = $('.img-box img');
        new qq.FileUploader({
            element: document.getElementById('upload_image_placeholder'),
            action: '<%= image_upload.api_endpoint || '' %>',
            debug: false,
            onProgress: function(id, fileName, loaded, total){
                console.log('uploader.onProgress: ', arguments);
            },
            onComplete: function(id, fileName, responseJSON){
                image_box.attr('src', responseJSON.avatar.url);
                image_box.autoscale();
            },
            template: '<span><div class="qq-uploader">' +
                    '<div class="qq-upload-drop-area"><span>העלאת תמונה</span></div>' +
                    '<div class="qq-upload-button"></div>' +
                    '<ul class="qq-upload-list"></ul>' +
                    '</div></span>'
        });
    })();
</script>
<% } %>