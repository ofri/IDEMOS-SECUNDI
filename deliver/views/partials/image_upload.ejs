<%
    /* Usage:

        Have a variable called image_upload = {
            default_image: '/images/...',
            current_value: '/images/...',
            api_endpoint: '/api/...',
            title: 'some text',
            disabled: false,
            input_name: 'image_upload'
        }

        Use CSS for styling:
            .img-box
            .img-box .image-container
            .img-box .image-container img
            .img-box #upload_image_placeholder
    */
%>
<style type="text/css">
    #upload_image_placeholder
    {
        position: absolute;
        left: 0;
        top: 0;
        right: 0;
        bottom: 0;
    }
</style>

<div class="img-box" style="overflow:hidden; position:relative;">
    <div class="image-container">
        <img src="<%= image_upload.default_image || '' %>" />
    </div>
    <span id="upload_image_placeholder"></span>
    <input type="hidden" name="<%= image_upload.input_name || 'image_upload' %>" value="" />
</div>

<% if (!image_upload.disabled) { %>
<script>
    (function () {
        var image_box = $('.img-box .image-container');
        var input = $('.img-box input');

        var setImageUrl = function (url) {
            input.val(url);

            var image = $('<img>').attr('src', url);
            image_box.empty().append(image);
            var scaler = function () {
                image.complete = true; // fool the scaler so it doesn't wait for the image to load.
                image.autoscale({
                    container: '.img-box'
                });
            };
            scaler();
            image.load(scaler);
        };

        new qq.FileUploader({
            element: document.getElementById('upload_image_placeholder'),
            action: '<%= image_upload.api_endpoint || '' %>',
            debug: false,
            onProgress: function(id, fileName, loaded, total){
                console.log('uploader.onProgress: ', arguments);
            },
            onComplete: function(id, fileName, responseJSON){
                console.log(responseJSON);
                setImageUrl(responseJSON.image ? responseJSON.image.url : responseJSON.avatar.url);
            },
            template: '<span><div class="qq-uploader">' +
                    '<div class="qq-upload-drop-area"><span>העלאת תמונה</span></div>' +
                    '<div class="qq-upload-button"></div>' +
                    '<ul class="qq-upload-list"></ul>' +
                    '</div></span>'
        });

        <% if (image_upload.current_value) { %>
            setImageUrl('<%=image_upload.current_value%>');
        <% } %>
    })();
</script>
<% } %>